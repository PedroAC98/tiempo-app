{"version":3,"sources":["context/index.js","context/provider.jsx","theming/theming.jsx","components/switch-labels/index.jsx","components/geo-button/index.jsx","components/card-hour/index.jsx","components/day-selector/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["GradosContext","React","createContext","GradosProvider","value","children","useState","grados","setGrados","Provider","theme","createTheme","palette","primary","main","blue","secondary","yellow","white","Root","styled","switchUnstyledClasses","disabled","track","thumb","focusVisible","checked","input","SwitchLabels","useContext","grado","setGrado","FormControlLabel","control","SwitchUnstyled","onChange","console","log","component","componentsProps","label","labelPlacement","GeoButton","variant","popupId","popupState","Button","bindTrigger","Menu","bindMenu","MenuItem","TextField","id","onClick","close","CardHour","props","className","data","hora","TabPanel","index","other","role","hidden","Box","sx","p","a11yProps","DaySelector","useTheme","setValue","luna","width","bgcolor","Tabs","event","newValue","indicatorColor","textColor","Tab","dir","direction","App","ThemeProvider","themeConfig","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed14ab83.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const GradosContext =  React.createContext('celsius');\r\n","import { useState } from \"react\";\r\nimport { GradosContext } from \".\";\r\n\r\nexport function GradosProvider({value, children}){\r\n\r\n    const [grados, setGrados] = useState(value);\r\n    return (\r\n        <GradosContext.Provider value = {[grados, setGrados]}>\r\n            {children}\r\n        </GradosContext.Provider>\r\n    )\r\n\r\n}","import { blue, green, pink, yellow, } from '@mui/material/colors';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: blue[500],\r\n      },\r\n      secondary: {\r\n        main: yellow[100],\r\n      },\r\n      white:{\r\n        main: (255,255,255), \r\n          \r\n      }\r\n    },\r\n  });\r\n\r\n  export default theme;","import { styled } from '@mui/system';\r\nimport SwitchUnstyled, { switchUnstyledClasses } from '@mui/base/SwitchUnstyled';\r\nimport { useContext, useState } from 'react';\r\nimport {GradosContext} from '../../context';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\n\r\nconst Root = styled('span')`\r\n  font-size: 0;\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 32px;\r\n  height: 20px;\r\n  margin: 10px;\r\n  cursor: pointer;\r\n\r\n  &.${switchUnstyledClasses.disabled} {\r\n    opacity: 0.4;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  & .${switchUnstyledClasses.track} {\r\n    background: #b3c3d3;\r\n    border-radius: 10px;\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n  }\r\n\r\n  & .${switchUnstyledClasses.thumb} {\r\n    display: block;\r\n    width: 14px;\r\n    height: 14px;\r\n    top: 3px;\r\n    left: 3px;\r\n    border-radius: 16px;\r\n    background-color: #fff;\r\n    position: relative;\r\n    transition: all 200ms ease;\r\n  }\r\n\r\n  &.${switchUnstyledClasses.focusVisible} .${switchUnstyledClasses.thumb} {\r\n    background-color: rgba(255, 255, 255, 1);\r\n    box-shadow: 0 0 1px 8px rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  &.${switchUnstyledClasses.checked} {\r\n    .${switchUnstyledClasses.thumb} {\r\n      left: 14px;\r\n      top: 3px;\r\n      background-color: #fff;\r\n    }\r\n\r\n    .${switchUnstyledClasses.track} {\r\n      background: #007fff;\r\n    }\r\n  }\r\n\r\n  & .${switchUnstyledClasses.input} {\r\n    cursor: inherit;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    z-index: 1;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport default function SwitchLabels() {\r\n  const label = { componentsProps: { input: { 'aria-label': 'Demo switch' }} };\r\n  \r\n  const[grados, setGrados] = useContext(GradosContext); // Contexto Celsius/Farenheit\r\n    const[grado, setGrado]  = useState('ºC')   // Label ºC ºF\r\n    const handleChange = ()=>{\r\n       grados === 'celsius' ? setGrados('farenheit') : setGrados('celsius')\r\n       grado === 'ºC' ? setGrado('ºF') : setGrado('ºC')\r\n       console.log(grados);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          control= {<SwitchUnstyled  onChange={handleChange} component={Root} {...label} />}\r\n          label={grado}\r\n          labelPlacement=\"start\"\r\n        />\r\n          \r\n         \r\n      \r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\nimport TextField from '@mui/material/TextField';\r\nexport default function GeoButton() {\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n      {(popupState) => (\r\n        <React.Fragment>\r\n          <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n            I\r\n          </Button>\r\n          <Menu {...bindMenu(popupState)}>\r\n            <MenuItem><TextField id=\"standard-basic\" label=\"Introduce una localizacion\" variant=\"standard\" /></MenuItem>\r\n            <MenuItem onClick={popupState.close}>Ubicación actual</MenuItem>\r\n          </Menu>\r\n        </React.Fragment>\r\n      )}\r\n    </PopupState>\r\n  );\r\n}","import './style.css'\r\n\r\nexport default function CardHour(props){\r\n\r\n    return  <div className=\" hour__container\">\r\n                <p>{props.data.hora}</p>\r\n                <p>luna</p>\r\n                <p>{props.data.grados}</p>\r\n            \r\n             </div>\r\n\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport CardHour from '../card-hour';\r\nimport './style.css'\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 1 }}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function DaySelector() {\r\n\r\n\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    // Reemplazar con las props del api\r\n    const data = {\r\n        hora: '00:00',\r\n        luna: 'luna',\r\n        grados: '6ºC'\r\n    }\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', bgcolor: 'transparent' }}>\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"transparent\"\r\n                textColor=\"secondary\"\r\n                variant=\"scrollable\"\r\n                aria-label=\"full width tabs example\"\r\n            >\r\n                <Tab label=\"Today\" {...a11yProps(0)} />\r\n                <Tab label=\"Tomorrow\" {...a11yProps(1)} />\r\n                <Tab label=\"Jueves\" {...a11yProps(2)} />\r\n                <Tab label=\"Viernes\" {...a11yProps(3)} />\r\n                <Tab label=\"Sabado\" {...a11yProps(4)} />\r\n                <Tab label=\"Domingo\" {...a11yProps(5)} />\r\n                <Tab label=\"Lunes\" {...a11yProps(6)} />\r\n            </Tabs>\r\n           \r\n                <TabPanel value={value} index={0} dir={theme.direction} >\r\n                    <div className=\"card__hour--container\" >\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n                        <CardHour data={data}></CardHour>\r\n\r\n                    </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    Item Two\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    Item Three\r\n                </TabPanel> \r\n                 <TabPanel value={value} index={3} dir={theme.direction}>\r\n                    Item One\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4} dir={theme.direction}>\r\n                    Item Two\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5} dir={theme.direction}>\r\n                    Item Three\r\n                </TabPanel>\r\n                <TabPanel value={value} index={6} dir={theme.direction}>\r\n                    Item Three\r\n                </TabPanel>\r\n            \r\n        </Box>\r\n    );\r\n}","import { GradosProvider } from './context/provider';\r\nimport './App.css';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport themeConfig from './theming/theming.jsx'\r\nimport SwitchLabels from './components/switch-labels';\r\nimport GeoButton from './components/geo-button';\r\nimport DaySelector from './components/day-selector';\r\nimport './App.css'\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={themeConfig}>\r\n     <GradosProvider>   \r\n       <div className=\"main\">\r\n        <SwitchLabels></SwitchLabels>\r\n        <GeoButton></GeoButton>\r\n        <DaySelector></DaySelector>\r\n        </div>\r\n        \r\n    </GradosProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}